services:
    {{{{appKey}}}}-cli:
        user: "${UID}:${GID}"
        container_name: {{{{appKey}}}}-cli
        build:
            args:
                - UID=${UID}
                - GID=${GID}
            context: .
            dockerfile: ./Dockerfile.local
            target: cli
        image: henrotaym/{{{{appKey}}}}-cli:local
        volumes:
            - .:/opt/apps/app
        networks:
            - {{{{appKey}}}}
            - applications
        profiles:
        - "cli"

    {{{{appKey}}}}-fpm:
        user: "${UID}:${GID}"
        container_name: {{{{appKey}}}}-fpm
        build:
            args:
                - UID=${UID}
                - GID=${GID}
            context: .
            dockerfile: ./Dockerfile.local
            target: fpm
        image: henrotaym/{{{{appKey}}}}-fpm:local
        volumes:
            - .:/opt/apps/app
        networks:
            - {{{{appKey}}}}
            - applications

    {{{{appKey}}}}-cron:
        container_name: {{{{appKey}}}}-cron
        build:
            args:
                - UID=${UID}
                - GID=${GID}
            context: .
            dockerfile: ./Dockerfile.local
            target: cron
        image: henrotaym/{{{{appKey}}}}-cron:local
        volumes:
            - .:/opt/apps/app
        networks:
            - {{{{appKey}}}}
            - applications
        profiles:
          - "cli"

    {{{{appKey}}}}:
        container_name: {{{{appKey}}}}-web
        build:
            context: .
            dockerfile: ./Dockerfile.local
            target: web
        image: henrotaym/{{{{appKey}}}}-web:local
        ports:
            - "${APP_PORT:-48080}:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            FPM_HOST: "{{{{appKey}}}}-fpm:9000"
        networks:
            - {{{{appKey}}}}
            - applications
        depends_on:
            - {{{{appKey}}}}-fpm
        volumes:
            - ./public:/opt/apps/app/public
        labels:
            - traefik.enable=true
            - traefik.http.routers.{{{{appKey}}}}.tls=true
            - traefik.http.routers.{{{{appKey}}}}.rule=Host(`{{{{appKey}}}}.docker.localhost`)
            - traefik.http.services.{{{{appKey}}}}.loadbalancer.server.port=80

    {{{{appKey}}}}-mysql:
        container_name: {{{{appKey}}}}-mysql
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-43306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - '{{{{appKey}}}}-mysql:/var/lib/mysql'
            - './devops/docker/database/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - {{{{appKey}}}}
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s

    {{{{appKey}}}}-redis:
        container_name: {{{{appKey}}}}-redis
        image: "redis:alpine"
        ports:
            - "${FORWARD_REDIS_PORT:-46379}:6379"
        volumes:
            - {{{{appKey}}}}-redis:/data
        networks:
            - {{{{appKey}}}}
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            retries: 3
            timeout: 5s

networks:
    {{{{appKey}}}}:
        driver: bridge

    applications:
        name: applications
        external: true
        
volumes:
    {{{{appKey}}}}-redis:
        driver: local

    {{{{appKey}}}}-mysql:
        driver: local
