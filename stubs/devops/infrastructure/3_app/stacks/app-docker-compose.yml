version: "3.7"
services:
  proxy:
    image: traefik:v2.10
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.email=tech@trustup.be
      - --certificatesresolvers.cloudflare.acme.storage=/letsencrypt/acme.json
      - --log.level=INFO
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --providers.docker.swarmmode=true
      - --providers.docker.network=public
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_API_EMAIL}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_TOKEN}
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-certificate:/letsencrypt
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        max_attempts: 10
      rollback_config:
        order: start-first
      update_config:
        order: start-first
        failure_action: rollback
      placement:
        constraints:
          - node.role == manager
    networks:
      - public

  fpm:
    image: {{{{dockerhubOrganizationName}}}}/${APP_KEY}-fpm:${DOCKER_IMAGE_TAG}
    depends_on:
      - init
    networks:
      - internal
    volumes:
      - "${APP_FOLDER}/.env:/opt/apps/app/.env"
      - "${STORAGE_FOLDER}/storage:/opt/apps/app/storage"
    deploy:
      mode: replicated
      restart_policy:
        condition: any
        max_attempts: 10
      rollback_config:
        order: start-first
      update_config:
        order: start-first
        failure_action: rollback

  web:
    image: {{{{dockerhubOrganizationName}}}}/${APP_KEY}-web:${DOCKER_IMAGE_TAG}
    environment:
      FPM_HOST: "fpm:9000"
    networks:
      - public
      - internal
    depends_on:
      - fpm
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.routers.app_router.rule=Host(`${APP_URL}`)
        - traefik.http.routers.app_router.entrypoints=websecure
        - traefik.http.routers.app_router.tls.certresolver=cloudflare
        - traefik.http.services.app_service.loadbalancer.server.port=80
      mode: replicated
      restart_policy:
        condition: any
        max_attempts: 10
      rollback_config:
        order: start-first
      update_config:
        order: start-first
        failure_action: rollback

  cron:
    image: {{{{dockerhubOrganizationName}}}}/${APP_KEY}-cron:${DOCKER_IMAGE_TAG}
    networks:
      - internal
    volumes:
      - "${APP_FOLDER}/.env:/opt/apps/app/.env"
      - "${STORAGE_FOLDER}/storage:/opt/apps/app/storage"
    deploy:
      mode: replicated
      restart_policy:
        condition: any
        max_attempts: 10
      rollback_config:
        order: start-first
      update_config:
        order: start-first
        failure_action: rollback
      placement:
        constraints:
          - node.role == manager

  queue:
    image: {{{{dockerhubOrganizationName}}}}/${APP_KEY}-cli:${DOCKER_IMAGE_TAG}
    command: ["php", "artisan", "horizon"]
    networks:
      - internal
    volumes:
      - "${APP_FOLDER}/.env:/opt/apps/app/.env"
      - "${STORAGE_FOLDER}/storage:/opt/apps/app/storage"
    deploy:
      mode: replicated
      restart_policy:
        condition: any
        max_attempts: 10
      rollback_config:
        order: start-first
      update_config:
        order: start-first
        failure_action: rollback

  redis:
    image: "redis:alpine"
    volumes:
      - ${DATA_FOLDER}/redis/data:/data
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      retries: 3
      timeout: 5s
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        max_attempts: 10
      rollback_config:
        order: start-first
      update_config:
        order: start-first
        failure_action: rollback
      placement:
        constraints:
          - node.role == manager

volumes:
  traefik-certificate:
    driver: local

networks:
  public:
    external: true
  internal:
    driver: overlay
